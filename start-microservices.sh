#!/bin/bash

# Script para inicializar os microsservi√ßos com Docker
# Execute este script para configurar todo o ambiente

echo "=== Inicializando Microsservi√ßos com Docker ==="

# Verificar se o Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o est√° instalado. Por favor, instale o Docker primeiro."
    exit 1
fi

# Verificar se o Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n√£o est√° instalado. Por favor, instale o Docker Compose primeiro."
    exit 1
fi

echo "‚úÖ Docker e Docker Compose encontrados"

# Verificar se h√° processos na porta 3307
if lsof -i :3307 &> /dev/null; then
    echo "‚ö†Ô∏è  Porta 3307 est√° em uso. Tentando parar processos..."
    sudo fuser -k 3307/tcp 2>/dev/null || true
    sleep 2
fi

# Limpar containers e volumes antigos
echo "üßπ Limpando containers antigos..."
sudo docker-compose down -v 2>/dev/null || true
sudo docker system prune -f 2>/dev/null || true

# Verificar se os Dockerfiles existem
echo "üîç Verificando Dockerfiles..."
if [ ! -f "./MSResident/Dockerfile" ]; then
    echo "‚ùå Dockerfile n√£o encontrado em MSResident"
    exit 1
fi

if [ ! -f "./MSFinancialManagement/Dockerfile" ]; then
    echo "‚ùå Dockerfile n√£o encontrado em MSFinancialManagement"
    exit 1
fi

if [ ! -f "./MSProprietary/Dockerfile" ]; then
    echo "‚ùå Dockerfile n√£o encontrado em MSProprietary"
    exit 1
fi

echo "‚úÖ Todos os Dockerfiles encontrados"

# Construir e iniciar apenas o banco de dados primeiro
echo "üöÄ Iniciando banco de dados..."
sudo docker-compose up -d db

# Aguardar o banco ficar pronto
echo "‚è≥ Aguardando banco de dados ficar pronto..."
sleep 30

# Verificar se o banco est√° saud√°vel
echo "üîç Verificando sa√∫de do banco..."
for i in {1..30}; do
    if sudo docker-compose exec db mysqladmin ping -h localhost -u root -proot &>/dev/null; then
        echo "‚úÖ Banco de dados est√° funcionando!"
        break
    fi
    echo "‚è≥ Tentativa $i/30 - Aguardando banco..."
    sleep 10
done

# Verificar se o banco realmente est√° funcionando
if ! sudo docker-compose exec db mysqladmin ping -h localhost -u root -proot &>/dev/null; then
    echo "‚ùå Erro: Banco de dados n√£o est√° respondendo"
    echo "üìã Logs do banco:"
    sudo docker-compose logs db
    exit 1
fi

# Construir e iniciar todos os microsservi√ßos
echo "üèóÔ∏è  Construindo e iniciando microsservi√ßos..."
sudo docker-compose up -d --build

# Aguardar os servi√ßos ficarem prontos
echo "‚è≥ Aguardando microsservi√ßos ficarem prontos..."
sleep 60

# Verificar status dos servi√ßos
echo "üìä Status dos servi√ßos:"
sudo docker-compose ps

# Verificar se os servi√ßos est√£o respondendo
echo "üîç Testando conectividade dos microsservi√ßos..."

# Testar MSResident
if curl -s http://localhost:8081/actuator/health &>/dev/null || curl -s http://localhost:8081/ &>/dev/null; then
    echo "‚úÖ MSResident est√° funcionando (porta 8081)"
else
    echo "‚ö†Ô∏è  MSResident pode n√£o estar respondendo ainda"
fi

# Testar MSFinancialManagement
if curl -s http://localhost:8082/actuator/health &>/dev/null || curl -s http://localhost:8082/ &>/dev/null; then
    echo "‚úÖ MSFinancialManagement est√° funcionando (porta 8082)"
else
    echo "‚ö†Ô∏è  MSFinancialManagement pode n√£o estar respondendo ainda"
fi

# Testar MSProprietary
if curl -s http://localhost:8083/actuator/health &>/dev/null || curl -s http://localhost:8083/ &>/dev/null; then
    echo "‚úÖ MSProprietary est√° funcionando (porta 8083)"
else
    echo "‚ö†Ô∏è  MSProprietary pode n√£o estar respondendo ainda"
fi

echo ""
echo "=== Informa√ß√µes dos Servi√ßos ==="
echo "üîó URLs dos microsservi√ßos:"
echo "   MSResident: http://localhost:8081"
echo "   MSFinancialManagement: http://localhost:8082"
echo "   MSProprietary: http://localhost:8083"
echo ""
echo "üóÑÔ∏è  Banco de dados MySQL:"
echo "   Host: localhost:3307"
echo "   Usu√°rio: root"
echo "   Senha: root"
echo "   Bancos: msresident, msfinancial, msproprietary"
echo ""
echo "üìã Comandos √∫teis:"
echo "   Ver logs: sudo docker-compose logs [servi√ßo]"
echo "   Parar tudo: sudo docker-compose down"
echo "   Reconstruir: sudo docker-compose up -d --build"
echo ""
echo "‚úÖ Inicializa√ß√£o conclu√≠da!"
